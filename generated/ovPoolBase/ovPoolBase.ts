// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class LiquidityAdded extends ethereum.Event {
  get params(): LiquidityAdded__Params {
    return new LiquidityAdded__Params(this);
  }
}

export class LiquidityAdded__Params {
  _event: LiquidityAdded;

  constructor(event: LiquidityAdded) {
    this._event = event;
  }

  get tokenA(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get tokenB(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amountA(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get amountB(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class PairCreated extends ethereum.Event {
  get params(): PairCreated__Params {
    return new PairCreated__Params(this);
  }
}

export class PairCreated__Params {
  _event: PairCreated;

  constructor(event: PairCreated) {
    this._event = event;
  }

  get tokenA(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get tokenB(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get pair(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RemainderTransferred extends ethereum.Event {
  get params(): RemainderTransferred__Params {
    return new RemainderTransferred__Params(this);
  }
}

export class RemainderTransferred__Params {
  _event: RemainderTransferred;

  constructor(event: RemainderTransferred) {
    this._event = event;
  }

  get token(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get recipient(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class ovPoolBase extends ethereum.SmartContract {
  static bind(address: Address): ovPoolBase {
    return new ovPoolBase("ovPoolBase", address);
  }

  uniswapV2Router(): Address {
    let result = super.call(
      "uniswapV2Router",
      "uniswapV2Router():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_uniswapV2Router(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "uniswapV2Router",
      "uniswapV2Router():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AddOwnedTokensAsLiquidityCall extends ethereum.Call {
  get inputs(): AddOwnedTokensAsLiquidityCall__Inputs {
    return new AddOwnedTokensAsLiquidityCall__Inputs(this);
  }

  get outputs(): AddOwnedTokensAsLiquidityCall__Outputs {
    return new AddOwnedTokensAsLiquidityCall__Outputs(this);
  }
}

export class AddOwnedTokensAsLiquidityCall__Inputs {
  _call: AddOwnedTokensAsLiquidityCall;

  constructor(call: AddOwnedTokensAsLiquidityCall) {
    this._call = call;
  }

  get tokenA(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokenB(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get amountA(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get amountB(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get minAmountTokenA(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get minAmountTokenB(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get deadline(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }
}

export class AddOwnedTokensAsLiquidityCall__Outputs {
  _call: AddOwnedTokensAsLiquidityCall;

  constructor(call: AddOwnedTokensAsLiquidityCall) {
    this._call = call;
  }
}

export class BuyTokensAsLiquidityCall extends ethereum.Call {
  get inputs(): BuyTokensAsLiquidityCall__Inputs {
    return new BuyTokensAsLiquidityCall__Inputs(this);
  }

  get outputs(): BuyTokensAsLiquidityCall__Outputs {
    return new BuyTokensAsLiquidityCall__Outputs(this);
  }
}

export class BuyTokensAsLiquidityCall__Inputs {
  _call: BuyTokensAsLiquidityCall;

  constructor(call: BuyTokensAsLiquidityCall) {
    this._call = call;
  }

  get tokenA(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokenB(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get minAmountTokenA(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get minAmountTokenB(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get deadline(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }
}

export class BuyTokensAsLiquidityCall__Outputs {
  _call: BuyTokensAsLiquidityCall;

  constructor(call: BuyTokensAsLiquidityCall) {
    this._call = call;
  }
}
